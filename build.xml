<?xml version="1.0" encoding="UTF-8"?>


<!--
  - Developed from main build file for bouncingline.
  - 
  - Generated with SaverBeans SDK Startup Kit
  - http://jdic.dev.java.net/
  -->

<project basedir="." default="dist" name="BuildStatus">

  <target name="properties">
    <property file="build.properties" />
    <property file="${user.home}/build.properties" />
    
    <property name="build" value="build" />
    <property name="dist" value="dist" />
    <property name="src" value="src" />
    <property name="conf" value="conf" />
    <property name="doc" value="doc" />
    <property name="lib" value="${basedir}\lib" />
    <property name="screensaver" value="buildstatus" />
    <property name="screensaver.class" value="com.touchclarity.buildstatus.ScreenSaver" />

    <!-- Values for the Windows installer -->
    <property name="productName" value="Build Status Screensaver" />
    <property name="productVersion" value="2.0.3" />
    <property name="productPublisher" value="Touch Clarity" />
    <property name="productWebSite" value="http://www.touchclarity.com/" />
  	
  </target>
  
  <target name="check" description="Check to make sure properties are set">
    <fail unless="saverbeans.path">
      Property saverbeans.path not found.  Please copy
      build.properties.sample to build.properties and
      follow the instructions in that file.
    </fail>
    <available file="${saverbeans.path}" property="saverbeans.present" />
    <fail unless="saverbeans.present">
      Property saverbeans.path is invalid.  Please set
      it to the installation path of the SaverBeans SDK.
    </fail>
  </target>
  
  <target name="check-nsis" description="Check if NSIS is present">
    <fail unless="nsis.path">
      Property nsis.path not found.  Please copy
      build.properties.sample to build.properties and
      follow the instructions in that file.
    </fail>
    <available file="${nsis.path}" property="nsis.present" />
    <fail unless="nsis.present">
      Property nsis.path is invalid.  Please set
      it to the installation path of NSIS.
    </fail>
  </target>
  
  <target name="define" description="Define custom tasks">
    <taskdef name="foreachscreensaver" 
      classname="org.jdesktop.jdic.screensaver.autogen.ForEachScreensaver"
      classpath="${saverbeans.path}/saverbeans-ant.jar" />
    <taskdef name="makewin32installscript" 
      classname="org.jdesktop.jdic.screensaver.autogen.NsiGeneratorTask"
      classpath="${saverbeans.path}/saverbeans-ant.jar" />
  </target>
    
  <target name="init" depends="properties,check,define" />
  
  <target name="compile" depends="init" description="Compile the screensaver">
    <mkdir dir="${build}/share" />
    <javac debug="on" destdir="${build}/share" srcdir="${src}" 
           classpath="${saverbeans.path}/saverbeans-api.jar;${lib}/htmlparser.jar;${lib}/xstream-1.3.jar;${lib}/jfreechart-1.0.3.jar;${lib}/jcommon-1.0.6.jar" />
    <copy todir="${build}/share">
      <fileset dir="${src}">
        <exclude name="**/CVS" />
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  	
  	<unzip src="${lib}/htmlparser.jar" dest="${build}/share" />
  	<unzip src="${lib}/xstream-1.3.jar" dest="${build}/share" />
  	<unzip src="${lib}/jfreechart-1.0.3.jar" dest="${build}/share" />
  	<unzip src="${lib}/jcommon-1.0.6.jar" dest="${build}/share" />
    
    <!-- Generate Makefile and Unix source distribution for each -->
    <mkdir dir="${build}/unix" />
    <foreachscreensaver confDir="${conf}" outDir="${build}/unix" os="unix" />
    <!-- Generate Windows .scr and binary distribution for each -->
    <mkdir dir="${build}/win32" />
    <foreachscreensaver confDir="${conf}" outDir="${build}/win32" os="win32" />
  </target>
  
  <!-- Create screensaver distribution -->
  <target name="dist" depends="compile">
    <mkdir dir="${build}/jar" />
    <jar destfile="${build}/jar/${screensaver}.jar">
      <fileset dir="${build}/share" />
    </jar>
    
    <!-- Create distribution for win32: -->
    <mkdir dir="${dist}/${screensaver}-win32" />
    <copy todir="${dist}/${screensaver}-win32">
      <fileset dir="${saverbeans.path}">
        <include name="saverbeans-api.jar" />
      </fileset>
      <fileset dir="${build}/jar">
        <include name="*.jar" />
      </fileset>
      <fileset dir="${build}/win32">
        <include name="*.scr" />
      </fileset>
      <fileset dir="${basedir}">
        <include name="COPYING" />
      </fileset>
      <fileset dir="${doc}/win32">
        <include name="README.txt" />
      </fileset>
    </copy>
    <zip destfile="${dist}/${screensaver}-win32.zip" basedir="${dist}"
         includes="${screensaver}-win32/**" />
    
    <!-- Create distribution for Unix: -->
    <mkdir dir="${dist}/${screensaver}-unix" />
    <copy todir="${dist}/${screensaver}-unix">
      <fileset dir="${saverbeans.path}">
        <include name="saverbeans-api.jar" />
      </fileset>
      <fileset dir="${build}/jar">
        <include name="*.jar" />
      </fileset>
      <fileset dir="${conf}">
        <include name="*.xml" />
      </fileset>
      <fileset dir="${build}/unix" />
      <fileset dir="${basedir}">
        <include name="COPYING" />
      </fileset>
      <fileset dir="${doc}/unix">
        <include name="README.txt" />
      </fileset>
    </copy>
    <zip destfile="${dist}/${screensaver}-unix.zip" basedir="${dist}"
         includes="${screensaver}-unix/**" />
  </target>
  
  <target name="win32-installer" depends="init,check-nsis,dist">
    <mkdir dir="${build}/win32-installer" />
    <makewin32installscript
        productName="${productName}"
        productVersion="${productVersion}"
        productPublisher="${productPublisher}"
        productWebSite="${productWebSite}"
        licenseFile="${basedir}/COPYING"
        outputFilename="${screensaver}-setup.exe"
        saverbeansSdkPath="${saverbeans.path}"
        outFile="${build}/win32-installer/${screensaver}.nsi"
        jarDir="${build}/jar"
        scrDir="${build}/win32"
    >
        <fileset dir="${conf}" includes="*.xml" />
    </makewin32installscript>
    <!-- Launch makensis on script to create the installer -->
    <exec executable="${nsis.path}/makensis.exe" failonerror="true">
      <arg line="${build}/win32-installer/${screensaver}.nsi" />
    </exec>
    <echo message="Screensaver Installer generated to: ${build}/win32-installer/${screensaver}-setup.exe" />
  </target>
  
  <!-- 
    - Compile and debug screensaver in a JFrame.
    - Can optionally attach to process using your Java IDE.  Change
    - to suspend=y if you need to debug before the first frame.
    -->
  <target name="debug" depends="compile">
    <java classname="org.jdesktop.jdic.screensaver.ScreensaverFrame" fork="true">
      <classpath>
        <pathelement location="${build}/share" />
        <pathelement location="${lib}" />
        <pathelement location="${saverbeans.path}/saverbeans-api.jar" />
      </classpath>
      <jvmarg value="-Xdebug" />
      <jvmarg value="-Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=y" />
      <arg value="${screensaver.class}" />
      <arg line="${debug.params}" />
    </java>
  </target>
  
  <target name="clean" depends="init" description="Cleans all generated files">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

</project>
